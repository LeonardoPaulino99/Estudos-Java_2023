package aula04;
public class ContaBanco {
    
    //declaracão de atributos
    public int numConta;
    protected String tipo;
    private String dono;
    private float saldo;
    private boolean status;
    
    // criando a classe estado atual para exibir as informacoes pertinentes
    public void estadoAtual (){
      System.out.println( "----------------------------");
      System.out.println("Conta: " + this.getNumConta());
      System.out.println("Tipo: " + this.getTipo() );
      System.out.println("Dono: " + this.getDono() );
      System.out.println ("Saldo: " + this.getSaldo ());
      System.out.println("Status: " + this.getStatus());
    }
    // criacao de metodos get e set de todos  atributos
    public int getNumConta() {
        return numConta;
    }

    public void setNumConta(int n) {
        this.numConta = n;
    }

    public String getTipo() {
        return tipo;
    }

    public void setTipo(String t) {
        this.tipo = t;
    }

    public String getDono() {
        return dono;
    }

    public void setDono(String d) {
        this.dono = d;
    }

    public float getSaldo() {
        return saldo;
    }

    public void setSaldo(float s) {
        this.saldo = s;
    }

    public boolean getStatus() {
        return status;
    }

    public void setStatus(boolean st) {
        this.status = st;
    }
    // criacão dos metódos. 
    // metodo abrir conta, abre a conta do usuario, conta CC= CONTA CORRENTE
    // conta CP = CONTA POUPANCA. Ao cadastrar uma CC recebe um saldo de 50, e CP
    // um saldo de 150. Exibe a mensagem de sucesso na criacao da conta. 
    public void abrirConta (String t){
        this.setTipo (t);
        this.setStatus(true);
        if (t == "CC") {
            this.setSaldo (50);
            System.out.println("Conta Aberta com sucesso !");
        } else if (t == "CP") {
            this.setSaldo(150);
            System.out.println("Conta Aberta com sucesso !");
        }
    }
    //metodo de fechar a conta, se tiver saldo informa que não pode ser fechada por conta do saldo.
    // se estiver com algum débito também informa erro e estando sem debito e creditos a conta é fechada. 
    
    public void fecharConta (){
        if (this.getSaldo () > 0) {
            System.out.println ("Conta não pode ser fechada possui saldo" + this.getDono());
        } else if (this.getSaldo() < 0) {
            System.out.println (" Conta não pode ser fechada possui débito"+ this.getDono());
        } else { 
            this.setStatus (false);
            System.out.println("Conta Fechada com sucesso !" + this.getDono());
        }
    }
    
    // metodo de deposito, consulta o valor do saldo em caso de saldo 0 fecha a conta se tiver saldo erro.
    public void depositar (float v) {
        if (this.getStatus ()){
            this.setSaldo(this.getSaldo() + v);
         System.out.println("Deposito realizado com sucesso na conta de: " 
         + this.getDono()); 
    } else {
         System.out.println("Impossível deposistar conta fechada !");
        }
    }
    
    //metodo de saque se tiver saque sucesso, em caso de não haver saque erro e quando a conta está fechada erro.
    public void sacar (float v) {
        if (this.getStatus ()) {
            if (this.getSaldo () >= v) {
                this.setSaldo (this.getSaldo () - v);
            System.out.println ("Saque realizado na conta de: " + this.getDono());
            
    } else {
            System.out.println ("Saldo insuficiente para saque ");    
            }
    } else {
            System.out.println ("Impossível sacar de uma conta fechada");
        }     
}
    // metodo de pagar mensalidade,  diferenca de valor cobrado em CP e CC, mensagem de erro se tiver sem saldo.
    public void pagarMensalidade (){
      int v = 0;
        if (this.getTipo() == "CC") {
         v = 12;
        } else if (this.getTipo() == "CP") {
         v = 20;
        }
        if (this.getStatus()) {
            this.setSaldo (this.getSaldo () - v);
            System.out.println ("Mensalidade paga com sucesso por" + this.getDono());
    } else {
            System.out.println ("Impossível pagar uma conta fechada ");
        }
}
    // metodo construtor, toda conta do banco comeca com saldo 0 e status falso pois não está aberta. 
    public ContaBanco () {
        this.saldo = 0;
        this.status = false;
    }

    
    
  
    
}
